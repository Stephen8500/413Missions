@page "/admin/books/details/{id:long}"

<!--details page-->
<h3 class="bg-info text-white text-center p-1">Details</h3>

<!--table with book info-->
<table class="table table-bordered table-sm table-striped table-hover">
    <tbody>
        <tr class="info"><th>Book ID:</th><td>@b.BookID</td></tr>
        <tr><th>Title:</th><td>@b.Title</td></tr>
        <tr><th>Author:</th><td>@b.Author</td></tr>
        <tr><th>Publisher:</th><td>@b.Publisher</td></tr>
        <tr><th>ISBN:</th><td>@b.ISBN</td></tr>
        <tr><th>Classification:</th><td>@b.Classification</td></tr>
        <tr><th>Category:</th><td>@b.Category</td></tr>
        <tr><th>Page Count:</th><td>@b.PageCount</td></tr>
        <tr><th>Price:</th><td>@(b.Price.ToString("c"))</td></tr>
    </tbody>
</table>

<!--buttons for editing book and returning to books page-->
<NavLink class="btn btn-warning" href="@EditUrl">Edit</NavLink>
<NavLink class="btn btn-secondary" href="/admin/books">Back</NavLink>

@code {

    [Inject]
    public IBookStoreRepository repo { get; set; }

    //id from slug (retrieved later)
    [Parameter]
    public long Id { get; set; }

    public Book b { get; set; }

    protected override void OnParametersSet()
    {
        b = repo.Books.FirstOrDefault(x => x.BookID == Id);
    }

    // create url for editing this book
    public string EditUrl => $"/admin/books/edit/{b.BookID}";
}

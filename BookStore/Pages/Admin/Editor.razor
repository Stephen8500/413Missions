@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"
@inherits OwningComponentBase<IBookStoreRepository>

<!--editing/adding book page-->
<!--styling validation message-->
<style>
    div.validation-message {color:rgb(220, 53,69); font-weight: 500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Book</h3>

<!--form for editing/entering info for this book-->
<EditForm Model="b" OnValidSubmit="SaveBook">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    
    <!--uneditable id field (default 0 for adding a book)-->
    <div class="form-group">
        <label>Book Id</label>
        <input class="form-group alert alert-success" disabled value="@b.BookID" />
    </div>

    <div class="form-group">
        <label>Title:</label>
        <ValidationMessage For="@(() => b.Title)"></ValidationMessage>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1">Book Title</span>
            </div>
            <InputText class="form-control" placeholder="Title" @bind-Value="b.Title"></InputText>
        </div>
    </div>

    <div class="form-group">
        <label>Author:</label>
        <ValidationMessage For="@(() => b.Author)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Author"></InputText>
    </div>

    <div class="form-group">
        <label>Publisher:</label>
        <ValidationMessage For="@(() => b.Publisher)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Publisher"></InputText>
    </div>

    <div class="form-group">
        <label>ISBN:</label>
        <ValidationMessage For="@(() => b.ISBN)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.ISBN"></InputText>
    </div>

    <div class="form-group">
        <label>Classification:</label>
        <ValidationMessage For="@(() => b.Classification)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Classification"></InputText>
    </div>

    <div class="form-group">
        <label>Category:</label>
        <ValidationMessage For="@(() => b.Category)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Category"></InputText>
    </div>

    <div class="form-group">
        <label>Page Count:</label>
        <ValidationMessage For="@(() => b.PageCount)"></ValidationMessage>
        <div class="input-group mb-3">
            <InputNumber class="form-control" placeholder="0" @bind-Value="b.PageCount"></InputNumber>
            <!--bootstrap appended "pages" on end of input-->
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon8">pages</span>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label>Price:</label>
        <ValidationMessage For="@(() => b.Price)"></ValidationMessage>
        <div class="input-group mb-3">
            <!--bootstrap prepended "$" on beginning of input-->
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon9">$</span>
            </div>
            <InputNumber class="form-control" placeholder="0.00" @bind-Value="b.Price"></InputNumber>
        </div>
    </div>

    <!--buttons for saving or cancelling-->
    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>
</EditForm>

@code {
    //id from slug, default 0 (retrieved later)
    [Parameter]
    public long Id { get; set; } = 0;

    // themecolor, titletext depend on whether we're adding or editing a book
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Book b { get; set; } = new Book();

    public IBookStoreRepository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            b = repo.Books.FirstOrDefault(x => x.BookID == Id);
        }
    }

    // method for saving book to repo
    public void SaveBook()
    {
        if (Id == 0) //new book
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }

        // return to books page
        NavManager.NavigateTo("/admin/books");
    }

    [Inject]
    public NavigationManager NavManager { get; set; }
}
